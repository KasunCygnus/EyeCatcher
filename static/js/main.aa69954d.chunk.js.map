{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","App","_useState","useState","_useState2","_slicedToArray","val","setVal","_useState3","_useState4","filename","setFilename","_useState5","_useState6","model","setModel","_useState7","_useState8","file","setFile","_useState9","_useState10","selectedImage","setSelectedImage","_useState11","_useState12","hasimage","setHasImage","_useState13","_useState14","hasPrediction","setHasPrediction","_useState15","_useState16","isLoading","setIsloading","useEffect","_ref","_asyncToGenerator","_callee","_context","tf","apply","arguments","loadModel","handleSubmit","_ref2","_callee2","event","image","tensorImg","prediction","_context2","preventDefault","document","getElementById","fromPixels","resizeNearestNeighbor","toFloat","expandDims","console","log","predict","data","t0","_x","React","createElement","className","onSubmit","id","alt","width","src","fill","xmlns","viewBox","onChange","target","files","infile","URL","createObjectURL","handleFileUpload","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.aa69954d.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nfunction App() {\n  const [val, setVal] = useState();\n  const [filename, setFilename] = useState(\"SELECT AN IMAGE\");\n  const [model, setModel] = useState(null);\n  const [file, setFile] = useState(null);\n  const [selectedImage, setSelectedImage] = useState();\n  const [hasimage, setHasImage] = useState(false);\n  const [hasPrediction, setHasPrediction] = useState(false);\n  const [isLoading, setIsloading] = useState(true);\n\n  useEffect(() => {\n    const loadModel = async () => {\n      const model_url = \"KModel/model.json\";\n      const model = await tf.loadLayersModel(model_url);\n      setModel(model);\n      setIsloading(false);\n    };\n\n    loadModel();\n  }, []);\n\n  const handleSubmit = async (event) => {\n    setIsloading(true);\n    event.preventDefault();\n    let image = document.getElementById(\"upimage\");\n\n    let tensorImg = tf.browser\n      .fromPixels(image)\n      .resizeNearestNeighbor([224, 224])\n      .toFloat()\n      .expandDims();\n    console.log(file.name);\n    try {\n      var prediction = await model.predict(tensorImg).data();\n      console.log(prediction);\n      setHasPrediction(true);\n      if (prediction[0] === 1) {\n        setVal(\"This is a good eye\");\n      } else if (prediction[1] === 1) {\n        setVal(\"This is level 1\");\n      } else if (prediction[2] === 1) {\n        setVal(\"This is level 2\");\n      } else if (prediction[3] === 1) {\n        setVal(\"This is level 3\");\n      } else if (prediction[4] === 1) {\n        setVal(\"This is level 4\");\n      } else {\n        setVal(\"This is Something else\");\n      }\n      setIsloading(false);\n    } catch (error) {\n      setIsloading(false);\n      console.log(error);\n    }\n  };\n  const handleFileUpload = (event) => {\n    const infile = event.target.files[0];\n    setFile(infile);\n    setFilename(infile.name);\n    setSelectedImage(URL.createObjectURL(event.target.files[0]));\n    setHasImage(true);\n  };\n\n  const resetAll = () => {\n    setHasImage(false);\n    setHasPrediction(false);\n    setFilename(\"SELECT AN IMAGE\");\n  };\n\n  return (\n    <div className=\"items-center \">\n      <h1 className=\" flex items-center justify-center text-3xl font-extrabold dark:text-indigo-800 md:text-5xl lg:text-5xl\">\n        <span className=\"text-transparent bg-clip-text bg-gradient-to-r to-blue-900 from-blue-900\">\n          Intelligent system to detect Diabetic Retinopathy\n        </span>\n      </h1>\n      <p className=\"text-lg font-normal text-white lg:text-xl\">\n        Upload the image file to detect.\n      </p>\n      {/* <h1 className=\"flex items-center justify-center\">Eye</h1> */}\n      <form onSubmit={handleSubmit}>\n        {hasimage ? (\n          <div className=\" flex items-center justify-center\">\n            <img\n              id=\"upimage\"\n              alt=\"not found\"\n              width={\"250px\"}\n              src={selectedImage}\n            ></img>\n          </div>\n        ) : (\n          <div className=\"flex w-full items-start justify-center bg-grey-lighter mb-5 mt-[5rem] \">\n            <label className=\"w-64 flex flex-col items-center px-4 py-6 bg-white text-blue rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue hover:text-blue-600\">\n              <svg\n                className=\"w-8 h-8\"\n                fill=\"blue\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n              </svg>\n              <span className=\"mt-2 text-base leading-normal\">{filename}</span>\n              <input\n                type=\"file\"\n                name=\"file\"\n                className=\"hidden\"\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                  handleFileUpload(e);\n                }}\n              />\n            </label>\n          </div>\n        )}\n\n        <span className=\"text-white\">File Uploaded : {filename}</span>\n\n        {hasimage ? (\n          <div className=\"flex items-center justify-center\">\n            <button\n              className=\"flex bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mt-5\"\n              type=\"submit\"\n            >\n              PREDICT\n            </button>\n\n            <span>\n              <p className=\"text-white\">Gap</p>\n            </span>\n\n            <button\n              className=\"flex bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mt-5\"\n              onClick={resetAll}\n            >\n              CLEAR\n            </button>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </form>\n      <span> </span>\n      {hasPrediction ? (\n        <div className=\" flex items-center justify-center text-2xl\">\n          <span className=\" text-transparent  bg-clip-text bg-gradient-to-r to-blue-900 from-blue-900 font-black\">\n            Detected Image is : {val}\n          </span>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      ((\n      {isLoading ? (\n        <div className=\"fixed top-0 left-0 right-0 bottom-0 w-full h-screen z-50 overflow-hidden bg-gray-700 opacity-75 flex flex-col items-center justify-center\">\n          <div className=\"loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12 mb-4\"></div>\n          <h2 className=\"text-center text-white text-xl font-semibold\">\n            Loading...\n          </h2>\n          <p className=\"w-1/3 text-center text-white\">\n            This may take a few seconds, please don't close this page.\n          </p>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}